<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Ubuntu下常用指令]]></title>
      <url>/2018/01/02/Ubuntu%E4%B8%8B%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近租了个服务器，用的是ubuntu17.10版本系统，所以搜集了一部分常用的指令，方便以后查阅。</p>
<a id="more"></a>
<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h4><pre class="line-numbers language-bash"><code class="language-bash">–help 简单的帮助

<span class="token function">help</span> <span class="token function">command</span> 详细的帮助

<span class="token function">man</span> <span class="token function">command</span> 最详细的帮助
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="ls-命令（显示当前目录文件）"><a href="#ls-命令（显示当前目录文件）" class="headerlink" title="ls 命令（显示当前目录文件）"></a>ls 命令（显示当前目录文件）</h4><pre class="line-numbers language-bash"><code class="language-bash">-a 显示全部文件与文件夹，包括隐藏的文件或文件夹

-l 显示详细的文件信息，包括权限，用户，用户组等

-h 将文件大小以方便阅读的形式表示出来，配合-l参数使用，常有奇效
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="cd-进入其他目录"><a href="#cd-进入其他目录" class="headerlink" title="cd 进入其他目录"></a>cd 进入其他目录</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> /etc/ 从绝对路径进入etc文件夹

<span class="token function">cd</span> etc/ 从当前目录进入etc文件夹

<span class="token function">cd</span> <span class="token punctuation">..</span> 返回当前目录的上一级目录

<span class="token function">cd</span> – 返回上一次所在的目录

<span class="token function">cd</span> 或 <span class="token function">cd</span> ~ 返回属主目录
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="tab键-命令补全"><a href="#tab键-命令补全" class="headerlink" title="tab键 命令补全"></a>tab键 命令补全</h4><p>tab键常用于在你输入了命令的前几个单词时，按下tab键进行补全，如果有多个前面部分相同的命令，则按两次tab键</p>
<h4 id="alias-别名"><a href="#alias-别名" class="headerlink" title="alias 别名"></a>alias 别名</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">alias</span> ubuntu<span class="token operator">=</span>”ls” 用于为一个命令取别名，当你输入ubuntu时等价输入了ls命令
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="apt-get-下载"><a href="#apt-get-下载" class="headerlink" title="apt-get 下载"></a>apt-get 下载</h4><p>最常用的指令，用于从软件源获取需要的软件</p>
<p>常用参数：</p>
<pre class="line-numbers language-bash"><code class="language-bash">update 与你的软件源（在/etc/apt/sources.list中列出）更新软件包列表，换源后需要执行

upgrade 根据update得到的源软件库与本地已经安装的对比，如果需要升级就全部升级

<span class="token function">install</span> 安装软件包，可以使用tab键补全软件包的名字

remove 卸载软件包

purge 卸载软件包，同时删除该软件的配置文件

<span class="token function">source</span> 从源里下载软件包的源码到当前目录并解压（除非指定-download-only参数）

check 用来（自动）修复已安装软件包之间的依赖关系

clean 清除/var/cache/apt/archives/包括其子目录partial/下的所有软件包缓存

autoclean 删除旧版本的软件包缓存

download 下载软件包的二进制包到当前目录
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="more、less-分页显示文本文件内容"><a href="#more、less-分页显示文本文件内容" class="headerlink" title="more、less 分页显示文本文件内容"></a>more、less 分页显示文本文件内容</h4><h4 id="head、tail-显示文件头、尾内容"><a href="#head、tail-显示文件头、尾内容" class="headerlink" title="head、tail 显示文件头、尾内容"></a>head、tail 显示文件头、尾内容</h4><h4 id="管道符-连接多个命令"><a href="#管道符-连接多个命令" class="headerlink" title="| 管道符 连接多个命令"></a>| 管道符 连接多个命令</h4><p>将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。</p>
<p>例：grep -r “close” /home/* | more 在home目录下所有文件中查找，包括close的文件，并分页输出。</p>
<h4 id="grep-字符串-在文本文件中查找某个字符串"><a href="#grep-字符串-在文本文件中查找某个字符串" class="headerlink" title="grep 字符串 在文本文件中查找某个字符串"></a>grep 字符串 在文本文件中查找某个字符串</h4><h4 id="sudo-管理员权限"><a href="#sudo-管理员权限" class="headerlink" title="sudo 管理员权限"></a>sudo 管理员权限</h4><p>sudo 我们主要用来临时提升权限，主要用以管理员(超级用户)的权限来运行命令，当需要修改当前登录用户力所不能及的文件/目录时需要用sudo</p>
<h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><h4 id="find-起始目录-name-查找的文件或目录"><a href="#find-起始目录-name-查找的文件或目录" class="headerlink" title="find 起始目录 -name 查找的文件或目录"></a>find 起始目录 -name 查找的文件或目录</h4><h4 id="mkdir-目录名-创建一个目录"><a href="#mkdir-目录名-创建一个目录" class="headerlink" title="mkdir 目录名 创建一个目录"></a>mkdir 目录名 创建一个目录</h4><p>-p 如果给出的路径中父目录不存在,则同时创建父目录</p>
<h4 id="touch-文件名-创建一个或多个文件"><a href="#touch-文件名-创建一个或多个文件" class="headerlink" title="touch 文件名 .. 创建一个或多个文件"></a>touch 文件名 .. 创建一个或多个文件</h4><h4 id="rmdir-空目录名-删除一个空目录"><a href="#rmdir-空目录名-删除一个空目录" class="headerlink" title="rmdir 空目录名 删除一个空目录"></a>rmdir 空目录名 删除一个空目录</h4><p>等同 rm -f</p>
<h4 id="rm-文件名-删除一个或多个文件"><a href="#rm-文件名-删除一个或多个文件" class="headerlink" title="rm 文件名 .. 删除一个或多个文件"></a>rm 文件名 .. 删除一个或多个文件</h4><p>最常用参数:</p>
<pre class="line-numbers language-bash"><code class="language-bash">-f 不提示不存在的文件,直接跳过

-i 每个删除动作都提示

-I 删除多个文件<span class="token punctuation">(</span>多于3个时<span class="token punctuation">)</span>或者递归式删除<span class="token punctuation">(</span>对于非空目录<span class="token punctuation">)</span>提示一次

-r和-R 递归式删除该目录下的一切东东

-v 显示每个文件的删除动作<span class="token punctuation">(</span>个人总是推荐使用此参数,明白你在做什么<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="注意：慎用"><a href="#注意：慎用" class="headerlink" title="注意：慎用"></a>注意：慎用</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">rm</span> -rf 非空目录名 删除一个非空目录下的一切
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="mv-源文件或目录-目标文件或目录"><a href="#mv-源文件或目录-目标文件或目录" class="headerlink" title="mv 源文件或目录 目标文件或目录"></a>mv 源文件或目录 目标文件或目录</h4><p>根据mv命令中的第二个参数类型（是目标文件还是目标目录），mv命令将文件重命名或将其移至一个新的目录中。当第二个参数类型是文件时，mv命令完成文件重命名，此时，源文件只能有一个（也可以是源目录名），它将所给的源文件或目录重命名为给定的目标文件名。当第二个参数是已存在的目录名称时，源文件或目录参数可以有多个，mv命令将各参数指定的源文件均移至目标目录中。</p>
<h3 id="最常用参数"><a href="#最常用参数" class="headerlink" title="最常用参数:"></a>最常用参数:</h3><pre><code>-b 为每个已经存在的目的文件做个备份(防止覆盖)

-f 不提示是否覆盖已经存在的目的文件

-i 与-f参数相反

-u 仅当源文件比目的文件更新或者目的文件不存在时候才移动

-v 显示移动文件的进度(个人总是推荐使用此参数,明白你在做什么)
</code></pre><h4 id="cat-文件名"><a href="#cat-文件名" class="headerlink" title="cat 文件名 .."></a>cat 文件名 ..</h4><p>把(一个或多个)文件内容(连接)显示到标准输出，当文本文件很小，而且你只是想看下，并不打算用gedit或者vim之类编辑器编辑的时候，可以使用。</p>
<h4 id="find-路经-name"><a href="#find-路经-name" class="headerlink" title="find 路经 -name"></a>find 路经 -name</h4><p>“字符串”查找路经所在范围内满足字符串匹配的文件和目录</p>
<h3 id="最常用参数-1"><a href="#最常用参数-1" class="headerlink" title="最常用参数:"></a>最常用参数:</h3><pre class="line-numbers language-bash"><code class="language-bash">-v 列出当前正在执行的步骤

-R 递归式,即改变非空目录下的一切为指定权限
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="cp-文件名或目录名-拷贝文件或目录"><a href="#cp-文件名或目录名-拷贝文件或目录" class="headerlink" title="cp 文件名或目录名 拷贝文件或目录"></a>cp 文件名或目录名 拷贝文件或目录</h4><h3 id="最常用参数："><a href="#最常用参数：" class="headerlink" title="最常用参数："></a>最常用参数：</h3><pre class="line-numbers language-bash"><code class="language-bash">-b 为每个已经存在的目的文件作个备份

-d 遇到软链接时不拷贝软链接所指向的文件<span class="token punctuation">;</span>拷贝时保留links属性<span class="token punctuation">(</span>链接数<span class="token punctuation">)</span>

-p 保留文件的访问权限,所有者,和时间戳

-R和-r 递归式拷贝<span class="token punctuation">(</span>cp过程遇到非空目录才有效<span class="token punctuation">)</span>,即拷贝目录,子目录,子目录的子目录…<span class="token punctuation">..</span>

-a 作用同-dpR

-s 并不真的做拷贝,而只是为每个文件作软链接<span class="token punctuation">(</span>符号链接<span class="token punctuation">)</span>

-u 仅当源文件比目的文件更新或者目的文件不存在时候才拷贝
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="ln-源文件或目录-目标文件或目录-为文件建立连接"><a href="#ln-源文件或目录-目标文件或目录-为文件建立连接" class="headerlink" title="ln 源文件或目录 目标文件或目录 为文件建立连接"></a>ln 源文件或目录 目标文件或目录 为文件建立连接</h4><p>linux的链接分为两种:硬链接和软链接，ln默认建立硬链接，硬链接的意思是一个档案可以有多个名称，而软链接的方式则是产生一个特殊的档案，该档案的内容是指向另一个档案的位置。硬链接是存在同一个文件系统中，而软链接却可以跨越不同的文件系统</p>
<h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化</p>
<h3 id="最常用参数-2"><a href="#最常用参数-2" class="headerlink" title="最常用参数:"></a>最常用参数:</h3><pre class="line-numbers language-bash"><code class="language-bash">-s 建立软链接<span class="token punctuation">(</span>符号链接,可以理解为win下的快捷方式<span class="token punctuation">)</span>

-f 如果要建立的链接名已经存在,则删除之

-b 删除，覆盖以前建立的链接

-v 显示详细的处理过程
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="tar-打包与解包"><a href="#tar-打包与解包" class="headerlink" title="tar 打包与解包"></a>tar 打包与解包</h4><p>和ps命令一样,tar一般不用单个参数,而是多个参数的组合,记住参数x是解压(extract),c是创建包(create)即可</p>
<h3 id="最常用参数-3"><a href="#最常用参数-3" class="headerlink" title="最常用参数:"></a>最常用参数:</h3><pre class="line-numbers language-bash"><code class="language-bash">-xvf 详细列出解包的步骤

-cvf 详细列出打包的步骤

-j 用来说明这是个tar.bz2包,例如tar -xjvf myfile.tar.bz2

-t 列出包中的文件列表
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="打包时常追加的参数"><a href="#打包时常追加的参数" class="headerlink" title="打包时常追加的参数:"></a>打包时常追加的参数:</h4><pre class="line-numbers language-bash"><code class="language-bash">-r 追加到压缩包中

-u 只把比包中更新的文件追加进去

-h 不把符号链接添加到包中,而是添加此符号链接指向的文件
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><pre class="line-numbers language-bash"><code class="language-bash">/etc/passwd 存储用户账号

/etc/group 存储组账号

/etc/shadow 存储用户账号的密码

/etc/gshadow 存储用户组账号的密码

/etc/profile 系统环境变量

bash_profile 用户环境变量

.bashrc 用户环境变量

<span class="token function">su</span> user 切换用户，加载配置文件.bashrc

<span class="token function">su</span> – user 切换用户，加载配置文件/etc/profile ，加载bash_profile

<span class="token function">useradd</span> 创建一个新的用户

<span class="token function">groupadd</span> 组名 创建一个新的组

<span class="token function">passwd</span> 用户名 为用户创建密码
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="最常用参数：-1"><a href="#最常用参数：-1" class="headerlink" title="最常用参数："></a>最常用参数：</h3><pre class="line-numbers language-bash"><code class="language-bash">-d 用户名 删除用户密码也能登陆

-S 用户名 查询用户状态

<span class="token function">usermod</span> -l 新用户名 老用户名 为用户改名
<span class="token function">userdel</span> –r 用户名 删除用户一切
<span class="token function">chown</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> owner<span class="token punctuation">[</span>:group<span class="token punctuation">]</span> <span class="token punctuation">{</span>File<span class="token operator">|</span>Directory<span class="token punctuation">}</span> 更改文件的用户及用户组

<span class="token function">chown</span> root:root filename

如果需要将某一目录下的所有文件都改变其拥有者，可以使用-R参数

<span class="token function">chgrp</span> <span class="token punctuation">[</span>group<span class="token punctuation">]</span> <span class="token punctuation">{</span>File<span class="token operator">|</span>Directory<span class="token punctuation">}</span> 更改文件所属组群

<span class="token function">chgrp</span> root filename

<span class="token function">chgrp</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><p>三种基本权限</p>
<p>R 读 数值表示为4</p>
<p>W 写 数值表示为2</p>
<p>X 可执行 数值表示为1</p>
<p>例如：</p>
<p>-rw-rw-r–一共十个字符，分成四段。</p>
<p>第一个字符“-”表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录</p>
<p>第二三四个字符“rw-”表示当前所属用户的权限，所以用数值表示为4+2=6</p>
<p>第五六七个字符“rw-”表示当前所属组的权限，所以用数值表示为4+2=6</p>
<p>第八九十个字符“r–”表示其他用户权限，所以用数值表示为2</p>
<h4 id="更改权限"><a href="#更改权限" class="headerlink" title="更改权限"></a>更改权限</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token punctuation">[</span>u所属用户 g所属组 o其他用户 a所有用户<span class="token punctuation">]</span> <span class="token punctuation">[</span>+增加权限 -减少权限<span class="token punctuation">]</span> <span class="token punctuation">[</span>r w x<span class="token punctuation">]</span> 目录名

例如：有一个文件filename，权限为“-rw-r—-x”，将权限值改为“-rwxrw-r-x”，用数值表示为765

<span class="token function">sudo</span> <span class="token function">chmod</span> u+x g+w o+r filename

上面的例子可以用数值表示

<span class="token function">sudo</span> <span class="token function">chmod</span> 765 filename
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h3><pre class="line-numbers language-bash"><code class="language-bash">ps，top 列出当前命令的执行状态
ps为静态，top为动态<span class="token punctuation">(</span>top时’q’退出<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="最常用参数-ps多用参数集合-而不是单个参数-并且配合grep使用"><a href="#最常用参数-ps多用参数集合-而不是单个参数-并且配合grep使用" class="headerlink" title="最常用参数(ps多用参数集合,而不是单个参数,并且配合grep使用):"></a>最常用参数(ps多用参数集合,而不是单个参数,并且配合grep使用):</h3><pre class="line-numbers language-bash"><code class="language-bash">-ef 以标准语法列出当前所有进程状态,例如ps -ef <span class="token operator">|</span> <span class="token function">grep</span> eva 列出eva的进程状态

aux 以BSD语法列出

-ejH 列出进程树

-eLf 同时列出线程状态

<span class="token function">kill</span> 进程号<span class="token punctuation">(</span>PID<span class="token punctuation">)</span> 杀死一个进程
<span class="token function">kill</span> -9 进程号 强制杀死一个进程
<span class="token function">stat</span> 显示指定文件的详细信息，比ls更详细
<span class="token function">who</span> 显示在线登陆用户
<span class="token function">whoami</span> 显示当前操作用户
<span class="token function">hostname</span> 显示主机名
<span class="token function">uname</span> 显示系统信息
<span class="token function">du</span> 查看目录大小 <span class="token function">du</span> -h /home带有单位显示目录信息
<span class="token function">df</span> 查看磁盘大小 <span class="token function">df</span> -h 带有单位显示磁盘信息
<span class="token function">ifconfig</span> 查看网络情况
<span class="token function">ping</span> 测试网络连通
<span class="token function">netstat</span> 显示网络状态信息
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h4><pre class="line-numbers language-bash"><code class="language-bash">-a <span class="token punctuation">(</span>all<span class="token punctuation">)</span>显示所有选项，默认不显示LISTEN相关

-t <span class="token punctuation">(</span>tcp<span class="token punctuation">)</span>仅显示tcp相关选项

-u <span class="token punctuation">(</span>udp<span class="token punctuation">)</span>仅显示udp相关选项

-n 拒绝显示别名，能显示数字的全部转化成数字。

-l 仅列出有在 Listen <span class="token punctuation">(</span>监听<span class="token punctuation">)</span> 的服務状态

-p 显示建立相关链接的程序名

-r 显示路由信息，路由表

-e 显示扩展信息，例如uid等

-s 按各个协议进行统计

-c 每隔一个固定时间，执行该netstat命令。
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a>注意：</h4><p>LISTEN和LISTENING的状态只有用-a或者-l才能看到</p>
<p>man 功能很多，简单的可以查看命令帮助，如：man ls</p>
<p>ufw 防火墙</p>
<h4 id="常用参数："><a href="#常用参数：" class="headerlink" title="常用参数："></a>常用参数：</h4><p>enable 启动防火墙</p>
<p>status 查看防火墙状态</p>
<p>allow 端口号或服务名 开放指定端口号</p>
<p>allow 22/tcp 只打开使用tcp/ip协议的22端口</p>
<p>disable 关闭防火墙</p>
<p>allow from 192.168.254.254 允许某特定IP</p>
<p>delete allow 删除已添加的规则</p>
<p>clear 清屏</p>
]]></content>
      
        
    </entry>
    
  
  
</search>
